benchmark:
  coidb.221216.7lvl:
    fasta: "data/benchmark/bold_clustered.sintax.7levels.fasta"
    taxonomy: "data/benchmark/coidb.221216.taxonomy.tsv.gz"
    ranks: ["kingdom","phylum","class","order","family","genus","species"]
    # should the reference sequences be trimmed to the region of interest?
    extract_subseq: True
    subseq_min_len: 300 # Minimum length of subsequence to be extracted from the reference
    hmm_from: 78
    hmm_to: 202
    asv_seq: "AATAAATAACATAAGATTTTGATTATTACCCCCTTCTTTATCTTTACTATTAATTAGAAGAATAGTTGAAACTGGAACAGGTACCGGATGAACTGTTTACCCACCATTATCTTCTATTATTGCTCATACAGGATCATCAGTAGATTTTTCAATTTTTTCTTTACATATTGCAGGAATTTCATCTATTTTAGGAGCTATTAATTTTATTTCAACTATATTAAATATAAAAATCAAATTTTTAAAATTTGATCAAATTTCATTATTTATTTGATCAATTTTAATTACAACTGTATTATTACTTTTATCATTACCTGTATTAGCAGGAGCAATTACTATACTATTAACAGATCGAAATTTAAATACATCATTTTTTGATCCTATAGGAGGAGGAGATCCAATTCTTTATCAACATTTATTT"
    

tools:
  - metabuli
  - kaiju
  - sintax
  #- epa-ng 

metabuli:
  ref:
    coi.test: "data/coi.subsample.fasta"
  query:
    coi.test_query: "data/coi.subsample.fasta"
  runs:
    default:
      options: ""
    illumina:
      options: "--min-score 0.15 --min-sp-score 0.5"
    #pacbio_hifi: 
    #  options: "--min-score 0.07 --min-sp-score 0.3"
    #pacbio_sequel:
    #  options: "--min-score 0.005"
    #ont:
    #  options: "--min-score 0.008"

sintax:
  ref:
    coi.test: 
      fasta: "data/coi.subsample.fasta"
      ranks: ["kingdom","phylum","class","order","family","genus","species","bold_bin"]
  query:
      coi.test_query: "data/coi.subsample.fasta"
  randseed: 15
  cutoff: 0.8  

kaiju:
  ref:
    coi.test: "data/coi.subsample.fasta"
  query:
    coi.test_query: "data/coi.subsample.fasta"
  settings: ""
    
epa-ng:
  # Set input options
  ref:
    lep_backbone:
      tree: "data/backbone.nex"
      tree_format: "nexus"
      msa: "data/lep_backbone_aln.nex"
      msa_format: "nexus"
      tree_ranks: ["order","family","genus","species"]
      ref_taxonomy: ""
      model: "GTR+F+I+I+R10"
  query: 
    lep: "data/lep.fasta"
  gappa:
    # Ratio by which LWR is split between annotations if an edge has two possible
    # annotations. Specifies the amount going to the proximal annotation. If not
    # set program will determine the ratio automatically from the 'distal length'
    # specified per placement.
    distribution_ratio: -1
    # For assignment of taxonomic labels to the reference tree, require this
    # consensus threshold. Example: if set to 0.6, and 60% of an inner node's
    # descendants share a taxonomic path, set that path at the inner node.
    consensus_thresh: 1